---
layout: post
title: ### 音视频(一)重识图片
date: 2022-03-30 16:45:30.000000000 +09:00
tag: 音视频技术
---

### 重识图片
#### 图片像素
1. 每张图片都由 N 个像素组成 N>=1
2. 如果一张图片分辨率是 WxH，那么
* 每一行都有 w 个像素 共 H 行 总共 W*H 个像素
* 宽度是 w，高度是 h 像素
3. 每个像素都有自己独立的颜色，若干像素就组成了一张色彩缤纷的完整图片


#### 位深度
每一个像素颜色如何存储的呢？
* 取决于图片的位深度(Bit Depth) 也称为色彩深度(Color Depth 色深)
* 如果一张图片位深度为 n，那么它的每一个像素都会使用 n 个二进制位来存储颜色信息


#### 例如 24bit 位深度含义
每一个像素都会使用 24 个二进制位来存储颜色信息
每一个像素颜色都由红、绿、蓝 3 个颜色通道合成
24bit 即每个颜色由 8bit 来表示其"含量"（值） 取值范围：
* 二进制 00000000~11111111 
* 十进制 0~255
* 十六进制 00~FF


#### 屏幕发光原理
* LCD 屏幕背后有一个背光层（发光用），前边的层每一个像素包含 RGB 三颜色，三颜色有一个阀门，门开多光进来的就多，呈现当前颜色就多
* OLED 屏幕，每一个像素可以自己发光，没有背光层，但 OLED 屏幕寿命短


#### 颜色数量
如果位深度为 n，那么每一个像素能显示 2^n 种颜色。所以位深度为 24 时，每一个像素能显示 2^24 种颜色。24bit 颜色也称为真彩色，也就是常说的 24 位真彩。


#### 其他位深度
* 1bit：2 种颜色
* 32bit：基于 24bit，增加了 8 位透明通道


#### 不同位深度对比
位深度越大，能表示的颜色数量就越多，图片就越鲜艳，颜色过渡就越平滑。


### 图片格式
* 一张图片大小如何计算？需要知道每个像素大小是多少。
* 如果是位深度是 n，那么每个像素大小就是 n 个二进制位。

{% highlight ruby %}
分辨率是 60x50，位深度是 24bit 的图片 所以
每个像素大小：24bit(3 字节，1 字节 == 8bit)
图片理论大小是：(60*50)(24/8)
{% endhighlight %}

jpg、png 都是压缩过的图片，所以它们的大小比理论值偏小

#### 图片压缩类型
* 无损压缩：不损失图片质量，压缩率低，体积大，解压后能还原完整的原始图片数据，不损失任何图片信息
* 有损压缩：损失图片质量，压缩率高，体积小，解压后无法还原完整的原始图片数据，损失一些图片信息

* JPG 是有损压缩，24bit 位深度
* PNG 无损压缩，8bit、24bit、32bit
* GIF 无损压缩，8bit

{% highlight ruby %}
有损压缩是把人肉眼看不出来的冗余信息去掉。
{% endhighlight %}

#### GIF 动画图
原理类似手翻书，GIF 内部存储了很多帧（张）静态图片，在短时间内，连续按顺序呈现每一帧静态图片，就形成了动画效果。


#### 视觉暂留
不管 GIF 动画还是手翻书，它们动画原理都是基于：视觉暂留(persistence of vision) 现象
* 当人眼所看到影像消失后，人眼仍然能继续保留其影像约为 0.1~0.4 秒左右，这种现象被称为视觉暂留现象
* 日光灯每秒大约熄灭 100 余次，但我们基本感觉不到日光灯的闪动，这都是视觉暂留的作用
* 在每一帧图片消失在大脑中前呈现下一张图，反复如此就可以形成连贯动画
* 电影帧率是 24fps
* fps 每秒帧数，Frames Per Second，每秒 24 张图

