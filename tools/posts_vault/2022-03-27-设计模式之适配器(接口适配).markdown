---
layout: post
title: ### 设计模式之适配器(接口适配)
date: 2022-03-27 16:45:30.000000000 +09:00
tag: 设计模式 iOS
---

### 何为适配器
已有的类与新的接口之间不兼容的问题相当普遍，解决方案就是适配器。用于连接两种不同种类对象，使其毫无问题的协同工作，有时称为"包装器"。适配器实现客户端所要的某种接口的行为，同时它又连接到另一个具有不同接口与行为的对象。
将一个类的接口转换成客户希望的另一个接口，适配器模式使得原本由于接口不兼容而不能在一起工作的那些类可以一起工作。

#### 涉及的类
* Adaptee
* Adapter
* Target

### 适配器种类-两种
* 类适配器，通过继承来适配两个接口，Adapter 继承自 Adaptee ，并实现 <Target> 协议。
* 对象适配器，Adapter 持有 Adaptee 对象 ，并实现 <Target> 协议。

#### 类适配器与对象适配器对比

{% highlight ruby %}
类适配器                                            对象适配器
只针对单一具体的 Adaptee，把 Adaptee 适配到 Target     可以适配多个 Adaptee 及其子类
易于重载 Adaptee 的行为，因为通过子类化进行适配          难易于重载 Adaptee 的行为，需要借助子类对象而不是 Adaptee 本身
只有一个 Adapter 对象，无需额外的指针间接访问 Adaptee    需要额外的指针间接访问 Adaptee 并适配其他行为
{% endhighlight %}

### 何时使用适配器
* 已有类的接口与需求不匹配
* 相应一个可复用的类，该类能够同时可能带有不兼容接口的其他类协作
* 需要适配一个类的几个不同子类，可以让每一个子类去子类化一个类适配器
