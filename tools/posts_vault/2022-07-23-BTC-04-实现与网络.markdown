---
layout: post
title: BTC-04-实现与网络
date: 2022-07-23 16:45:30.000000000 +09:00
tag: 区块链
---

## 0x01 UTXO

比特币采用基于交易的账本模式，每个区块记录交易信息（转账交易、铸币交易）。

### UTXO
比特币的全节点要维护一个叫 UTXO 的数据结构 UTXO：Unspent Transaction Output（还没有花出去的交易的输出），
可用于防止双花，一个交易可能有多个输出，比如 A 转 5BTC 给 B，转 3BTC 给 C

每个交易消耗一些 UTXO 输出，又产生新的 UTXO 输出

一个交易可以有多个输入，多个输出
* 输入金额 >= 输出金额
* 输入金额 == 输出金额 + 交易费

### 交易费
BTC 中有两个激励机制
1. 出块奖励
2. Transaction fee 交易费
* 出块奖励每隔 21 万个区块就减半，一个区块大于 10 分钟，21 万个区块大约是 4 年，多年后出块奖励就很少了交易费将作为主要的奖励

### 账户模式
* 比特币是基于交易的账本模式，不知道每个账户有多少钱需要推算，这么模式隐私性好一些，但交易时必须说明输入来源
* 另一种是以太坊是基于账户模式，会维护每个账户有多少钱


### 0x02 Example

![](/assets/images/btc/block_example.png)

* 每个 2016 个区块要调整挖矿难度
* Height 就是区块的序号
* Nonce 就是随机数
* 计算哈希值只算 block header
* nBits 是 uint32_t 就是出块阈值编码后的版本
* Block header 的 nonce 是 uint32_t 最多 2^32 个，现在即使 nonce 都试过了也可能找不到合适的值出块，这时可以改 Merkle  root 哈希值

![](/assets/images/btc/block_header.png)

![](/assets/images/btc/header_key.png)

如果 nonce 都试过了，可以改 Merkle root 哈希值，可通过改 coinbase 内容，铸币时内容是自己自定义添加的，
可以把 coinbase 里的前 8 个字节当成 extra nonce 用。

{% highlight ruby %}
即块头里 4 字节 nonce 不够用，可以用 coinbase 前 8 个字节当成 extra nonce 用
{% endhighlight %}

真正挖矿时，外层循环调整 coinbase 的 nonce 算出 block header 里的根哈希值，内层循环在调整 block header 里的 nonce

### 交易
前一个交易的 output script 和当前交易的 input script 配对，能顺利执行 那这个交易就是合法的

## 0x03 挖矿
挖矿就是不断的尝试 nonce 来求解 puzzle。
每次尝试称为一个 Bernoulli trial：a random experiment with binary outcome；例如投硬币也是  Bernoulli trial。

### Bernoulli process
* Bernoulli process：a sequence of independent Bernoulli trials 即很多 Bernoulli trial
* Bernoulli process 特性是无记忆性，前边的结果对后边结果无影响.
* Progress free（过去做过的都白做了）：平均 10 分钟出块，时间是指数分布的，比如过了 10 分钟还没出块则还是要等 10 分钟，这个是无记忆性保证的，保证了公平性

Progress free 虽然是无情的，但它是挖矿公平性的保障。因为不是这样那么算力强的矿工会有优势。

## 0x04 geometric series
出块奖励是一个几何序列
* 21万 x 50 x （1 + 1/2 + 1/4 + 1/8 …..）= 2100 万（BTC 总量）
* 经典的 geometric series（1 + 1/2 + 1/4 + 1/8 …..） = 1 / (1 - 1/2) = 2
{% highlight ruby %}
挖矿对维护比特币系统的安全性是至关重要的。Bitcoin is secured by mining。
{% endhighlight %}

* 区块插到哪是挖矿前就要设定好的，因为需要前一个区块的信息（哈希）。
* 当一个区块刚写入区块叫 One confirmation，第二个叫 two confirmation，
比特币默认要等 6 个 confirmation，才认为 One confirmation 那个块是不可篡改的。这个要等 1 个小时
* 不可篡改是概率性的，刚写入的还是有概率被篡改的
* Zero confirmation 即刚发起交易时但还没写入块中
* 比特币规定每个区块大小 1M ，如果交易太多会写入到下一个区块

### Selfish mining
即挖到区块先不发布，（正常是挖到一个区块就发布），之后发布一串，但这样有个前提即恶意节点需要有 51% 算力。

Selfish mining 目的
1. 覆盖原来交易
2. 减少竞争独自挖下一个区块

Selfish mining 风险是有可能自己的白挖了
{% highlight ruby %}
{% endhighlight %}

## 0x05 BTC 网络工作原理
* 比特币工作在应用层
* 网络层运行的 P2P Overlay Network
* 比特币所有节点都是平等的
* 要加入网络要知道 seed node ，seed node 会告诉你它知道的其他节点，节点通过 tcp 通信
* 退出时候自己退出就行了，过一段时间其他节点会把你删掉
* 比特币设计原则 simple robust but not efficient
* 消息在网络中传播叫 floading 方式，选一个邻居节点，更新自己的交易信息，把自己消息发送给其他节点，并自己记录这个消息已经收到过
* 邻居节点是随机的，鲁棒性很强，牺牲的是效率
* 每个节点要维护一个等待上链的交易集合


